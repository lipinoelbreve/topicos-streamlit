import networkx as nx
import matplotlib.pyplot as plt
from pyvis.network import Network
import pandas as pd
import numpy as np
import streamlit as st
import streamlit.components.v1 as components
import os
import utils


main = utils.get_data()

st.title("Medical Resarch Network ü¶† üë®‚Äç‚öïÔ∏è üò∑ üíâ")

st.markdown('Aplicaci√≥n cuyo fin es mostrar las interacciones entre instituciones investigadoras y t√≥picos m√©dicos estudiados por la comunidad cient√≠fica, en el contexto de la materia T√≥picos Avanzados hecha por los alumnos Nicol√°s Lupi, Victoria Matta y Ezequiel Raigorodsky. Los datos son sacados de [PubMed](https://pubmed.ncbi.nlm.nih.gov/), de donde se obtienen art√≠culos que representan interacciones entre autores y t√≥picos.')
st.sidebar.header("Par√°metros de la Red")
st.sidebar.subheader('')
first_year, last_year = int(main.year.min()), int(main.year.max())

with st.form(key = 'Form'):
    with st.sidebar:
        year_range = st.sidebar.slider(
            'A√±os a mostrar',
            first_year, last_year, (last_year-1, last_year))

        with st.expander('Elegir enfermedades'):
            enfermedades = ['Todos'] + list(set(main['grupo']))
            grupos = st.multiselect(
                'grupo',
            enfermedades,
            enfermedades[1:3]
            )

            if 'Todos' in grupos:
                grupos = enfermedades

        with st.expander('Elegir pa√≠ses'):
            paises = set(main.pais)
            paises_aux = []
            for pais in ['Argentina', 'United Kingdom', 'United States','China','India']:
                if pais in paises:
                    paises_aux.append(pais)
                    break
            
            if len(paises_aux) == 0:
                paises_aux = np.random.choice(list(paises))
            paises_seleccionados = st.multiselect(
                'Pa√≠ses',
                ['Todos'] + list(paises),
                paises_aux
            )

            if 'Todos' in paises_seleccionados:
                paises_seleccionados = paises


        giant = st.checkbox('Mostrar Componente Gigante')
        reduce = st.checkbox('Visualizar Red Reducida')
        barnes = st.checkbox('Barnes Hut (visualizaci√≥n r√°pida)')
        #btwns = st.checkbox('Calcular Betweenness (bajo su propio riesgo)')

        submitted = st.form_submit_button(label = 'Submit')

if submitted:
    file_name = 'nx.html'
    params_dict = utils.build_graph(main, year_range, grupos, paises_seleccionados, giant, reduce)
    
    utils.show_graph(file_name, barnes, grupos, paises_seleccionados, **params_dict)